
@SpringBootTest
@AutoConfigureMockMvc
@ActiveProfiles("test")
public class ProductControllerTest {

	@Autowired
	private MockMvc mockMvc;

	@MockBean
	private ProductService productService;

	@Test
	public void testgetProductByCode() throws Exception {
		when(productService.search(anyString())).thenReturn(new ProductModel("P001","Mouse",500));
		ResultActions result = mockMvc.perform(get("/products/{code}", "P001"));
		result.andExpect(status().isOk())
		.andExpect(jsonPath("$.code").value("P001"))
        .andExpect(jsonPath("$.name").value("Mouse"))
        .andExpect(jsonPath("$.price").value(500));
		
	}

}
==============================================================================

@WebMvcTest(value = ProductController.class)
@ActiveProfiles("test")
public class ProductControllerTest {

	@Autowired
	private MockMvc mockMvc;

	@MockBean
	private ProductService productService;

	@Test
	public void testgetProductByCode() throws Exception {
		when(productService.search(anyString())).thenReturn(new ProductModel("P001","Mouse",500));
		ResultActions result = mockMvc.perform(get("/products/{code}", "P001"));
		result.andExpect(status().isOk())
		.andExpect(jsonPath("$.code").value("P001"))
        .andExpect(jsonPath("$.name").value("Mouse"))
        .andExpect(jsonPath("$.price").value(500));
		
	}

}

